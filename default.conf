# nginx.conf
events {}

http {
    # Enable detailed logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log info;

    # Define upstreams with proper load balancing and health checks
    upstream gateway_servers {
        server gateway_pad:3000 max_fails=3 fail_timeout=30s;
        server gateway_pad:3000 max_fails=3 fail_timeout=30s;
        server gateway_pad:3000 max_fails=3 fail_timeout=30s;
    }

    upstream task_execution_service_upstream {
        server task_execution_service:5001 max_fails=2 fail_timeout=15s;
        server task_execution_service:5002 max_fails=2 fail_timeout=15s;
        server task_execution_service:5003 max_fails=2 fail_timeout=15s;
    }

    upstream task_management_service_upstream {
        server task_management_service:5000 max_fails=2 fail_timeout=15s;
        server task_management_service:5000 max_fails=2 fail_timeout=15s;
        server task_management_service:5000 max_fails=2 fail_timeout=15s;
    }

    # Define server block
    server {
        listen 80;

        # Proxy all other requests to the Gateway with load balancing
        location / {
            proxy_pass http://gateway_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Retry logic
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 5;  # Increased from 3 to 5

            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            proxy_send_timeout 10s;
        }

        # Proxy /execute_task/<task_id> to Task Execution Service
        location /execute_task/ {
            proxy_pass http://task_execution_service_upstream/execute/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # Retry logic
            proxy_next_upstream error timeout invalid_header http_404 http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 5;  # Increased from 3 to 5

            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            proxy_send_timeout 10s;
        }

        # Metrics Endpoints
        location /metrics/task_management {
            proxy_pass http://task_management_service_upstream/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            proxy_send_timeout 10s;
        }

        location /metrics/task_execution {
            proxy_pass http://task_execution_service_upstream/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            proxy_send_timeout 10s;
        }

        location /metrics/gateway {
            proxy_pass http://gateway_servers/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            proxy_send_timeout 10s;
        }

        # Nginx Status Page (for monitoring)
        location /nginx_status {
            stub_status on;
            allow all;  # Change to 'allow 127.0.0.1;' for security
        }
    }
}
