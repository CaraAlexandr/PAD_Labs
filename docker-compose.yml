version: '3.8'

services:
  # Redis Service
  redis_pad:
    image: redis:alpine
    container_name: redis_pad
    ports:
      - "6379:6379"
    networks:
      - backend
    restart: unless-stopped

  # PostgreSQL for Task Management
  db_task_management:
    image: postgres:13-alpine
    container_name: db_task_management
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: task_management_db
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: unless-stopped

  # PostgreSQL for Task Execution
  db_task_execution:
    image: postgres:13-alpine
    container_name: db_task_execution
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: task_execution_db
    ports:
      - "5433:5432"
    networks:
      - backend
    restart: unless-stopped

  # Task Management Service
  task_management_service:
    build:
      context: ./task_management_service
      dockerfile: Dockerfile
    container_name: task_management_service
    ports:
      - "5000:5000"    # Flask HTTP
      - "50051:50051"  # gRPC
    depends_on:
      - redis_pad
      - db_task_management
    environment:
      - DATABASE_URL=postgresql://user:password@db_task_management:5432/task_management_db
    networks:
      - backend
    restart: unless-stopped

  # Task Execution Service
  task_execution_service:
    build:
      context: ./task_execution_service
      dockerfile: Dockerfile
    container_name: task_execution_service
    ports:
      - "5001:5000"    # Flask HTTP
      - "50052:50052"  # gRPC
    depends_on:
      - redis_pad
      - db_task_execution
      - task_management_service
    environment:
      - DATABASE_URL=postgresql://user:password@db_task_execution:5432/task_execution_db
      - TASK_MANAGEMENT_URL=task_management_service:50051
    networks:
      - backend
    restart: unless-stopped

  # NestJS Gateway Service
  gateway_pad:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway_pad
    ports:
      - "8002:3000"    # Gateway HTTP
    depends_on:
      - task_management_service
      - task_execution_service
      - redis_pad
      - db_task_management
      - db_task_execution
    environment:
      - DATABASE_URL=postgresql://user:password@db_task_management:5432/task_management_db
      - TASK_MANAGEMENT_URL=task_management_service:50051
      - TASK_EXECUTION_URL=task_execution_service:50052
    networks:
      - backend
    restart: unless-stopped

  # Service Discovery
  service_discovery:
    build:
      context: ./service_discovery
      dockerfile: Dockerfile
    container_name: service_discovery
    ports:
      - "8003:3000"    # Service Discovery HTTP
    depends_on:
      - redis_pad
    networks:
      - backend
    restart: unless-stopped

networks:
  backend:
    driver: bridge
