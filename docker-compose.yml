version: '3'

services:
  # Redis Cluster Nodes
  redis-node-1:
    image: redis:6.0-alpine
    hostname: redis-node-1
    command: redis-server --port 7001 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --dir /data
    networks:
      redis_cluster:
    volumes:
      - ./redis-data/node-1:/data

  redis-node-2:
    image: redis:6.0-alpine
    hostname: redis-node-2
    command: redis-server --port 7002 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --dir /data
    networks:
      redis_cluster:
    volumes:
      - ./redis-data/node-2:/data

  redis-node-3:
    image: redis:6.0-alpine
    hostname: redis-node-3
    command: redis-server --port 7003 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --dir /data
    networks:
      redis_cluster:
    volumes:
      - ./redis-data/node-3:/data

  redis-node-4:
    image: redis:6.0-alpine
    hostname: redis-node-4
    command: redis-server --port 7004 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --dir /data
    networks:
      redis_cluster:
    volumes:
      - ./redis-data/node-4:/data

  redis-node-5:
    image: redis:6.0-alpine
    hostname: redis-node-5
    command: redis-server --port 7005 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --dir /data
    networks:
      redis_cluster:
    volumes:
      - ./redis-data/node-5:/data

  redis-node-6:
    image: redis:6.0-alpine
    hostname: redis-node-6
    command: redis-server --port 7006 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --dir /data
    networks:
      redis_cluster:
    volumes:
      - ./redis-data/node-6:/data

  # Redis Cluster Setup
  redis-cluster-setup:
    image: redis:6.0-alpine
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - redis-node-6
    command: redis-cli -p 7000 --cluster create redis-node-1:7001 redis-node-2:7002 redis-node-3:7003 redis-node-4:7004 redis-node-5:7005 redis-node-6:7006 --cluster-replicas 1 --cluster-yes
    networks:
      redis_cluster:

  # Postgres Databases
  db_task_management:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: task_management_db
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: unless-stopped

  db_task_execution:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: task_execution_db
    ports:
      - "5433:5432"
    networks:
      - backend
    restart: unless-stopped

  # Task Management Service
  task_management_service:
    build:
      context: ./task_management_service
      dockerfile: Dockerfile
    depends_on:
      - db_task_management
      - redis-cluster-setup
    environment:
      DATABASE_URL: postgresql://user:password@db_task_management:5432/task_management_db
      REDIS_CLUSTER_NODES: redis-node-1:7001,redis-node-2:7002,redis-node-3:7003
    networks:
      - backend
      - redis_cluster
    deploy:
      replicas: 3
    ports:
      - "5000"  # Expose port for monitoring

  # Task Execution Service
  task_execution_service:
    build:
      context: ./task_execution_service
      dockerfile: Dockerfile
    depends_on:
      - db_task_execution
      - task_management_service
      - redis-cluster-setup
    environment:
      DATABASE_URL: postgresql://user:password@db_task_execution:5432/task_execution_db
      TASK_MANAGEMENT_URL: http://task_management_service:5000/tasks
      REDIS_CLUSTER_NODES: redis-node-1:7001,redis-node-2:7002,redis-node-3:7003
    networks:
      - backend
      - redis_cluster
    deploy:
      replicas: 3
    ports:
      - "5001"  # Expose port for monitoring

  # Gateway Service
  gateway_pad:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8002:3000"
#    depends_on:
#      - task_management_service
#      - task_execution_service
    environment:
      - TASK_MANAGEMENT_URL=http://task_management_service:5000/tasks
      - TASK_EXECUTION_URL=http://task_execution_service:5001/
      - TASK_EXECUTION_URLS=http://task_execution_service:5001/,http://task_execution_service:5001/,http://task_execution_service:5001/
    networks:
      - backend
    restart: unless-stopped

  # Monitoring Services
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - backend

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - backend

  # Nginx Service
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/default.conf
      - ./logs/nginx:/var/log/nginx  # Mount logs to a local directory
    depends_on:
      - gateway_pad
    networks:
      - backend
    restart: unless-stopped


networks:
  backend:
    driver: bridge
  redis_cluster:
    driver: bridge
