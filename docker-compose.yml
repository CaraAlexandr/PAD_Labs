services:
  redis_pad:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - backend
    restart: unless-stopped

  db_task_management:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: task_management_db
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: unless-stopped

  db_task_execution:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: task_execution_db
    ports:
      - "5433:5432"
    networks:
      - backend
    restart: unless-stopped

  task_management_service:
    build:
      context: ./task_management_service
      dockerfile: Dockerfile
    depends_on:
      - redis_pad
      - db_task_management
    environment:
      - DATABASE_URL=postgresql://user:password@db_task_management:5432/task_management_db
      - REDIS_HOST=redis_pad
      - REDIS_PORT=6379
    networks:
      - backend
    deploy:
      replicas: 3

  task_execution_service:
    build:
      context: ./task_execution_service
      dockerfile: Dockerfile
    depends_on:
      - redis_pad
      - db_task_execution
      - task_management_service
    environment:
      - DATABASE_URL=postgresql://user:password@db_task_execution:5432/task_execution_db
      - TASK_MANAGEMENT_URL=http://task_management_service:5000/tasks
      - REDIS_HOST=redis_pad
      - REDIS_PORT=6379
    networks:
      - backend
    deploy:
      replicas: 3

  gateway_pad:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8002:3000"
    depends_on:
      - task_management_service
      - task_execution_service
    environment:
      - TASK_MANAGEMENT_URL=http://task_management_service:5000/tasks
      - TASK_EXECUTION_URL=http://task_execution_service:5001/
    networks:
      - backend
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - backend

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - gateway_pad
    networks:
      - backend
    restart: unless-stopped

networks:
  backend:
    driver: bridge
